<?php
/**
 * @file
 * PennCourse Module
 *
 * This module supports display of course data from the Penn Data Warehouse
 */

/***************************
 * Commenting out this function but keeping it for future reference
 * displays structure for field definitions, useful for building install functions
 * for content types

function penncourse_init() {
    $info_config = field_info_field('field_pc_section_int');
    $info_instance = field_info_instance('node', 'field_pc_section_int', 'pc_section');
    unset($info_config['id']);
    unset($info_instance['id'], $info_instance['field_id']);
    include_once DRUPAL_ROOT . '/includes/utility.inc';
    $output = "field_create_field(" . drupal_var_export($info_config) . ");\n";
    $output .= "field_create_instance(" . drupal_var_export($info_instance) . ");";
    drupal_set_message("<textarea rows=30 style=\"width: 100%;\">" . $output . '</textarea>');
} */

function penncourse_init() {
    drupal_add_js(drupal_get_path('module', 'jquery_update') . '/replace/ui/ui/minified/jquery.ui.core.min.js');
    drupal_add_js(drupal_get_path('module', 'jquery_update') . '/replace/ui/ui/minified/jquery.ui.effect-slide.min.js');
    drupal_add_js(drupal_get_path('module', 'jquery_update') . '/replace/ui/ui/minified/jquery.ui.effect-fade.min.js');
    drupal_add_css(drupal_get_path('module', 'jquery_update') . '/replace/ui/themes/base/minified/jquery.ui.core.min.css');
    drupal_add_css(drupal_get_path('module', 'jquery_update') . '/replace/ui/themes/base/minified/jquery.ui.theme.min.css');
}

/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/
function penncourse_help($section='') {
  $output = '';

  switch ($section) {
    case "admin/help#penncourse":
      $output = '<p>' . t("Displays course information from the Penn Data Warehouse. Requires separate configuration of data synchronization tasks.") . '</p>';
      break;
  }

  return $output;
} // function onthisdate_help

function penncourse_views_api() {
  return array(
    'api' => 3,
  );
}

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function penncourse_permission() {
  return array(
      'access penncourse content' => array(
          'title' => t('Access PennCourse Content'),
          'description' => t('Access basic module content.')
      ),
      'admin penncourse' => array(
          'title' => t('Administer PennCourse Module'),
          'description' => t('Access administrative tasks for this module.')
      ),
  );
} // function penncourse_perm()

/**
 * Implementation of hook_menu()
 */
function penncourse_menu() {
    $items['admin/settings/penncourse'] = array(
        'title' => 'PennCourse',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('penncourse_admin_settings'),
        'access arguments' => array('admin penncourse'),
        'description' => 'Change settings for the Penncourse module.',
        'file' => 'penncourse.admin.inc',
    );
    $items['pc'] = array(
        'title' => 'Courses',
        'page callback' => 'penncourse_course_list_term',
        'page arguments' => array(NULL),
        'access callback' => 'user_access',
        'access arguments' => array('access penncourse content'),
        'type' => MENU_CALLBACK,
        'file' => 'penncourse.pages.inc',
    );
    /* $items['pc/test'] = array(
        'title' => 'Courses',
        'page callback' => 'penncourse_data_retrieve_test',
        'page arguments' => array(NULL),
        'access callback' => 'user_access',
        'access arguments' => array('admin penncourse'),
        'type' => MENU_CALLBACK,
        'file' => 'penncourse.pages.inc',
    );
    $items['pc/whack'] = array(
        'title' => 'Courses',
        'page callback' => '_penncourse_whack',
        'page arguments' => array(NULL),
        'access callback' => 'user_access',
        'access arguments' => array('admin penncourse'),
        'type' => MENU_CALLBACK,
        'file' => 'penncourse.include.inc',
    ); */
    $items['pc/term/%'] = array(
        'title' => 'Courses',
        'page callback' => 'penncourse_course_list_term',
        'page arguments' => array(2),
        'access callback' => 'user_access',
        'access arguments' => array('access penncourse content'),
        'type' => MENU_CALLBACK,
        'file' => 'penncourse.pages.inc',
    );
    $items['pc/term/%/subject/%'] = array(
        'title' => 'Courses',
        'page callback' => 'penncourse_course_list_term',
        'page arguments' => array(2, 4, 'all'),
        'access callback' => 'user_access',
        'access arguments' => array('access penncourse content'),
        'type' => MENU_CALLBACK,
        'file' => 'penncourse.pages.inc',
    );
    $items['pc/term/%/subject/%/level/%'] = array(
        'title' => 'Courses',
        'page callback' => 'penncourse_course_list_term',
        'page arguments' => array(2, 4, 6),
        'access callback' => 'user_access',
        'access arguments' => array('access penncourse content'),
        'type' => MENU_CALLBACK,
        'file' => 'penncourse.pages.inc',
    );
    $items['pc/load/%'] = array(
        'title' => 'Loading Courses',
        'page callback' => 'penncourse_load_year',
        'page arguments' => array(2),
        'access callback' => 'user_access',
        'access arguments' => array('admin penncourse'),
        'type' => MENU_CALLBACK,
        'file' => 'penncourse.pages.inc',
    );
    return $items;
} // function penncourse_menu()

/**
 * implementation of hook_block_info
 */
function penncourse_block_info() {
    $blocks = array();

    $blocks['penncourse_filter_block'] = array(
        'info' => t('Course Filter'),
        'cache' => DRUPAL_CACHE_GLOBAL,
    );

    return $blocks;
}

/**
 * implementation of hook_block_view
 */
function penncourse_block_view($delta = '') {
    $block = array();
    switch($delta) {
        case 'penncourse_filter_block':
            drupal_add_js(drupal_get_path('module', 'penncourse') . '/js/penncourse_filter_form.js');
            $block['subject'] = t('Course Filter');
            $block['content'] = drupal_get_form('penncourse_filter_form');
            break;
    }

    return $block;
}

/**
 * @param $form
 * @param $form_state
 * form definition for the Penn Course Navigation Filter
 */
function penncourse_filter_form($form, &$form_state) {
    module_load_include('inc', 'penncourse', 'penncourse.include');

    // set default form values
    if (arg(2)) {
        $default_term = arg(2);
    }
    else {
        $default_term = penncourse_load_final_term();
    }

    if (arg(4)) {
        $default_subject = arg(4);
    }
    else {
        $default_subject = 'all';
    }

    if (arg(6)) {
        $default_level = arg(6);
    }
    else {
        $default_level = 'all';
    }

    $form['term'] = array(
        '#type' => 'select',
        '#title' => t('Term'),
        '#options' => penncourse_get_all_terms(),
        '#default_value' => $default_term,
        // '#description' => t('Select the term to view.'),
    );

    $subjects = penncourse_get_all_subjects();
    $subjects = array_merge(array('all' => 'All department subjects'), $subjects);
    $form['Subject'] = array(
        '#type' => 'select',
        '#title' => t('Subject'),
        '#options' => $subjects,
        '#default_value' => $default_subject,
        // '#description' => t('Select a subject to restrict the course display.'),
    );

    $form['Level'] = array(
        '#type' => 'select',
        '#title' => t('Level'),
        '#options' => array(
            'all' => 'All',
            'undergraduate' => 'Undergraduate',
            'graduate' => 'Graduate',
        ),
        '#default_value' => $default_level,
        // '#description' => t('Select a subject to restrict the course display.'),
    );

    return $form;
} // function penncourse_filter_form

function penncourse_filter_form_validate($form, &$form_state) {
}

function penncourse_filter_form_submit($form, &$form_state) {
}

/**
 * Implementation of hook_cron
 */
function penncourse_cron() {
  module_load_include('inc', 'penncourse', 'penncourse.include');

  // update the section search parameters (includes currently open terms and subject area mappings)
  penncourse_update_section_params();
  $subject_array = explode(' ', trim(variable_get('penncourse_subject_areas', '')));

  // process each subject area as set on the penncourse system settings form
  foreach ($subject_array as $subject) {
    penncourse_process_subj_area($subject);
  }
}

/**
 * function pcpm
 *
 * a wrapper for the devel module dpm function
 */
function pcpm($value) {
  if (module_exists('devel')) {
    dpm($value);
  }
}
